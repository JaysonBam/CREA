const express = require("express");
const cors = require("cors");
require("dotenv").config();

const app = express();
const BACKEND_PORT = process.env.BACKEND_PORT || 5000;
const BACKEND_HOST = process.env.BACKEND_HOST;
const FRONTEND_URL = process.env.FRONTEND_URL;
const allowedOrigins = [
  FRONTEND_URL,
  // "https://myapp.com",  //Any external apis
];

app.use(
  cors({
    origin: (origin, callback) => {
      if (!origin || allowedOrigins.includes(origin)) {
        callback(null, true);
      } else {
        console.warn(`❌ Blocked by CORS: ${origin}`);
        callback(null, false);
      }
    },
    credentials: true,
  })
);

app.use(express.json());

// Routes
const testCrudRoutes = require("./routes/TestCrudRoutes");
app.use("/api/test-crud", testCrudRoutes);

const authRoutes = require("./routes/AuthRoutes");
app.use("/api/auth", authRoutes);

const issueReportRoutes = require("./routes/IssueReportRoutes");
app.use("/api/report-issue", issueReportRoutes);

const fs = require("fs");
const path = require("path");

//Jayden
//Generated by GPT, logs any errors on the backend side to the terminal
// (sothat any errors can be seen (not just error 500))
//=====================================================
app.use((err, req, res, next) => {
  const logFile = path.join(__dirname, "error.log");
  const log = `[${new Date().toISOString()}] ${req.method} ${req.url}\n${
    err.stack
  }\n\n`;

  fs.appendFileSync(logFile, log, "utf8");

  console.error("❌ Internal server error:", err.message);
  res.status(500).json({ error: "Internal Server Error" });
});
//======================================================

// Start server
app.listen(BACKEND_PORT, BACKEND_HOST, () => {
  console.log(`✅ Server running on http://${BACKEND_HOST}:${BACKEND_PORT}`);
});
